@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();


@mixin custom-components-theme($theme) {
}


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$my-app-theme: (
    50: $light-primary-text,
    100: white,
    200: white,
    A200: #343434,
    A400: #9A9A9A,
    A700: #272727,
    contrast: (
    50: $light-primary-text,
    100: $light-primary-text,
    200: $light-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text
    ),
    color: ( 
      primary: #777777,
      accent: $light-primary-text
    ) 
  );

$my-app-primary: mat-palette($my-app-theme, A200, A400, A700);
$my-app-accent: mat-palette($my-app-theme, 50, 100, 200);

// The warn palette is optional (defaults to red).
$my-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$my-app-theme: mat-dark-theme($my-app-primary, $my-app-accent, $my-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($my-app-theme);